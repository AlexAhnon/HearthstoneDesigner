#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HearthstoneDesigner.SQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CardDatabase")]
	public partial class LINQtoSQLDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCardTable(CardTable instance);
    partial void UpdateCardTable(CardTable instance);
    partial void DeleteCardTable(CardTable instance);
    #endregion
		
		public LINQtoSQLDataContext() : 
				base(global::HearthstoneDesigner.Properties.Settings.Default.CardDatabaseConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LINQtoSQLDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CardTable> CardTables
		{
			get
			{
				return this.GetTable<CardTable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CardTable")]
	public partial class CardTable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _CardType;
		
		private int _Mana;
		
		private int _Rarity;
		
		private int _Attack;
		
		private int _Health;
		
		private string _Text;
		
		private int _IsRestricted;
		
		private string _ImagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCardTypeChanging(string value);
    partial void OnCardTypeChanged();
    partial void OnManaChanging(int value);
    partial void OnManaChanged();
    partial void OnRarityChanging(int value);
    partial void OnRarityChanged();
    partial void OnAttackChanging(int value);
    partial void OnAttackChanged();
    partial void OnHealthChanging(int value);
    partial void OnHealthChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnIsRestrictedChanging(int value);
    partial void OnIsRestrictedChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
		
		public CardTable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CardType", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string CardType
		{
			get
			{
				return this._CardType;
			}
			set
			{
				if ((this._CardType != value))
				{
					this.OnCardTypeChanging(value);
					this.SendPropertyChanging();
					this._CardType = value;
					this.SendPropertyChanged("CardType");
					this.OnCardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mana", DbType="Int NOT NULL")]
		public int Mana
		{
			get
			{
				return this._Mana;
			}
			set
			{
				if ((this._Mana != value))
				{
					this.OnManaChanging(value);
					this.SendPropertyChanging();
					this._Mana = value;
					this.SendPropertyChanged("Mana");
					this.OnManaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rarity", DbType="Int NOT NULL")]
		public int Rarity
		{
			get
			{
				return this._Rarity;
			}
			set
			{
				if ((this._Rarity != value))
				{
					this.OnRarityChanging(value);
					this.SendPropertyChanging();
					this._Rarity = value;
					this.SendPropertyChanged("Rarity");
					this.OnRarityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="Int NOT NULL")]
		public int Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Health", DbType="Int NOT NULL")]
		public int Health
		{
			get
			{
				return this._Health;
			}
			set
			{
				if ((this._Health != value))
				{
					this.OnHealthChanging(value);
					this.SendPropertyChanging();
					this._Health = value;
					this.SendPropertyChanged("Health");
					this.OnHealthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="VarChar(MAX)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRestricted", DbType="Int NOT NULL")]
		public int IsRestricted
		{
			get
			{
				return this._IsRestricted;
			}
			set
			{
				if ((this._IsRestricted != value))
				{
					this.OnIsRestrictedChanging(value);
					this.SendPropertyChanging();
					this._IsRestricted = value;
					this.SendPropertyChanged("IsRestricted");
					this.OnIsRestrictedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="VarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
